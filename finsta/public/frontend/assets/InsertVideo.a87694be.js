import{_ as v,f as c,g as m,j as D,N as F,S as y,T as k,V as w,X as x,M as g,q as p,D as n,x as f,t as C,y as N,k as V,F as U}from"./index.a22779ab.js";class E{constructor(){this.listeners={},this.failed=!1}on(e,l){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(l)}trigger(e,l){(this.listeners[e]||[]).forEach(s=>{s.call(this,l)})}upload(e,l){return new Promise((u,s)=>{let t=new XMLHttpRequest;t.upload.addEventListener("loadstart",()=>{this.trigger("start")}),t.upload.addEventListener("progress",r=>{r.lengthComputable&&this.trigger("progress",{uploaded:r.loaded,total:r.total})}),t.upload.addEventListener("load",()=>{this.trigger("finish")}),t.addEventListener("error",()=>{this.trigger("error"),s()}),t.onreadystatechange=()=>{if(t.readyState==XMLHttpRequest.DONE){let r;if(t.status===200){let a=null;try{a=JSON.parse(t.responseText)}catch{a=t.responseText}let h=a.message||a;u(h)}else if(t.status===403)r=JSON.parse(t.responseText);else{this.failed=!0;try{r=JSON.parse(t.responseText)}catch{}}r&&r.exc&&console.error(JSON.parse(r.exc)[0]),s(r)}};const d=l.upload_endpoint||"/api/method/upload_file";t.open("POST",d,!0),t.setRequestHeader("Accept","application/json"),window.csrf_token&&window.csrf_token!=="{{ csrf_token }}"&&t.setRequestHeader("X-Frappe-CSRF-Token",window.csrf_token);let o=new FormData;e&&o.append("file",e,e.name),o.append("is_private",l.private?"1":"0"),o.append("folder",l.folder||"Home"),l.file_url&&o.append("file_url",l.file_url),l.doctype&&o.append("doctype",l.doctype),l.docname&&o.append("docname",l.docname),l.fieldname&&o.append("fieldname",l.fieldname),l.method&&o.append("method",l.method),l.type&&o.append("type",l.type),t.send(o)})}}const T={name:"FileUploader",props:["fileTypes","uploadArgs","validateFile"],data(){return{uploader:null,uploading:!1,uploaded:0,error:null,message:"",total:0,file:null,finishedUploading:!1}},computed:{progress(){let i=Math.floor(this.uploaded/this.total*100);return isNaN(i)?0:i},success(){return this.finishedUploading&&!this.error}},methods:{openFileSelector(i){i&&(this.$refs.input.accept=i),this.$refs.input.click()},async onFileAdd(i){if(this.error=null,this.file=i.target.files[0],this.file&&this.validateFile)try{let e=await this.validateFile(this.file);e&&(this.error=e)}catch(e){this.error=e}this.error||this.uploadFile(this.file)},async uploadFile(i){this.error=null,this.uploaded=0,this.total=0,this.uploader=new E,this.uploader.on("start",()=>{this.uploading=!0}),this.uploader.on("progress",e=>{this.uploaded=e.uploaded,this.total=e.total}),this.uploader.on("error",()=>{this.uploading=!1,this.error="Error Uploading File"}),this.uploader.on("finish",()=>{this.uploading=!1,this.finishedUploading=!0}),this.uploader.upload(i,this.uploadArgs||{}).then(e=>{this.$emit("success",e)}).catch(e=>{this.uploading=!1;let l="Error Uploading File";e?._server_messages?l=JSON.parse(JSON.parse(e._server_messages)[0]).message:e?.exc&&(l=JSON.parse(e.exc)[0].split(`
`).slice(-2,-1)[0]),this.error=l,this.$emit("failure",e)})}}},A=["accept"];function O(i,e,l,u,s,t){return c(),m("div",null,[D("input",{ref:"input",type:"file",accept:l.fileTypes,class:"hidden",onChange:e[0]||(e[0]=(...d)=>t.onFileAdd&&t.onFileAdd(...d))},null,40,A),F(i.$slots,"default",y(k({file:s.file,uploading:s.uploading,progress:t.progress,uploaded:s.uploaded,message:s.message,error:s.error,total:s.total,success:t.success,openFileSelector:t.openFileSelector})))])}var L=v(T,[["render",O]]);const B={name:"InsertImage",props:["editor"],expose:["openDialog"],data(){return{addVideoDialog:{url:"",file:null,show:!1}}},components:{Button:w,Dialog:x,FileUploader:L},methods:{openDialog(){this.addVideoDialog.show=!0},onVideoSelect(i){let e=i.target.files[0];!e||(this.addVideoDialog.file=e)},addVideo(i){this.editor.chain().focus().insertContent(`<video src="${i}"></video>`).run(),this.reset()},reset(){this.addVideoDialog=this.$options.data().addVideoDialog}}},J={class:"flex items-center space-x-2"},R=["src"];function H(i,e,l,u,s,t){const d=g("Button"),o=g("FileUploader"),r=g("Dialog");return c(),m(U,null,[F(i.$slots,"default",y(k({onClick:t.openDialog}))),p(r,{options:{title:"Add Video"},modelValue:s.addVideoDialog.show,"onUpdate:modelValue":e[2]||(e[2]=a=>s.addVideoDialog.show=a),onAfterLeave:t.reset},{"body-content":n(()=>[p(o,{"file-types":"video/*",onSuccess:e[0]||(e[0]=a=>s.addVideoDialog.url=a.file_url)},{default:n(({file:a,progress:h,uploading:_,openFileSelector:S})=>[D("div",J,[p(d,{onClick:S},{default:n(()=>[f(C(_?`Uploading ${h}%`:s.addVideoDialog.url?"Change Video":"Upload Video"),1)]),_:2},1032,["onClick"]),s.addVideoDialog.url?(c(),N(d,{key:0,onClick:()=>{s.addVideoDialog.url=null,s.addVideoDialog.file=null}},{default:n(()=>e[3]||(e[3]=[f(" Remove ")])),_:2},1032,["onClick"])):V("",!0)])]),_:1}),s.addVideoDialog.url?(c(),m("video",{key:0,src:s.addVideoDialog.url,class:"mt-2 w-full rounded-lg",type:"video/mp4",controls:""},null,8,R)):V("",!0)]),actions:n(()=>[p(d,{variant:"solid",onClick:e[1]||(e[1]=a=>t.addVideo(s.addVideoDialog.url))},{default:n(()=>e[4]||(e[4]=[f(" Insert Video ")])),_:1}),p(d,{onClick:t.reset},{default:n(()=>e[5]||(e[5]=[f("Cancel")])),_:1},8,["onClick"])]),_:1},8,["modelValue","onAfterLeave"])],64)}var M=v(B,[["render",H]]);export{M as default};
